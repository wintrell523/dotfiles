#!/usr/bin/env bash

# Easier navigation: .., ..., ...., ....., ~ and -
alias ..="cd .."
alias cd..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."
alias ~="cd ~" # `cd` is probably faster to type though
alias -- -="cd -"

# Shortcuts
alias dl="cd ~/Downloads"
alias dt="cd ~/Desktop"
alias p="cd ~/Projects"
alias g="git"

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
	colorflag="--color"
	export LS_COLORS='no=00:fi=00:di=01;31:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'
else # macOS `ls`
	colorflag="-G"
	export LSCOLORS='BxBxhxDxfxhxhxhxhxcxcx'
fi

if which vim > /dev/null 2>&1; then
  alias vi=vim
fi

# alternative to tail -f
alias lessf="less +F"

# List all files colorized in long format
alias l="ls -lF ${colorflag}"
alias ll="ls -lahF ${colorflag}"

# List all files colorized in long format, excluding . and ..
alias la="ls -lAF ${colorflag}"

# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always use color output for `ls`
alias ls="command ls ${colorflag}"

# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Enable aliases to be sudo’ed
alias sudo='sudo '

# Get week number
alias week='date +%V'

# Stopwatch
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'

# Dice for the undecided
alias dice='echo $[ 1 + $RANDOM % 6 ]'
alias yn='[ $[ $RANDOM % 2 ] == 0 ] && echo "Yes" || echo "No"'

# IP addresses
alias myip="dig +short myip.opendns.com @resolver1.opendns.com"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"

# Scanning networks

# scan network with arp requests (parameter: local network like 192.168.1.0/24)
alias nmap-arp="nmap -r -sn -PR"

# Canonical hex dump; some systems have this symlinked
command -v hd > /dev/null || alias hd="hexdump -C"

# macOS has no `md5sum`, so use `md5` as a fallback
command -v md5sum > /dev/null || alias md5sum="md5"

# macOS has no `sha1sum`, so use `shasum` as a fallback
command -v sha1sum > /dev/null || alias sha1sum="shasum"

# Recursively delete `.DS_Store` files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"

# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'

# Merge PDF files, preserving hyperlinks
# Usage: `mergepdf input{1,2,3}.pdf`
alias mergepdf='gs -q -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile=_merged.pdf'

# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"

# One of @janmoesen’s ProTip™s
for method in GET HEAD POST PUT DELETE TRACE OPTIONS; do
	alias "${method}"="lwp-request -m '${method}'"
done

# Kill all the tabs in Chrome to free up memory
# [C] explained: http://www.commandlinefu.com/commands/view/402/exclude-grep-from-your-grepped-output-of-ps-alias-included-in-description
alias chromekill="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"

# Reload the shell (i.e. invoke as a login shell)
alias reload="exec ${SHELL} -l"

# generic colouriser
GRC="$(type -p grc)"
if [ "$TERM" != dumb ] && [ -n "$GRC" ]
then
    alias colourify="$GRC -es --colour=auto"
    alias configure='colourify ./configure'
    alias df='colourify df'
    alias diff='colourify diff'
    alias docker='colourify docker'
    alias docker-machine='colourify docker-machine'
    alias du='colourify du'
    alias env='colourify env'
    alias make='colourify make'
    alias gcc='colourify gcc'
    alias g++='colourify g++'
    alias as='colourify as'
    alias gas='colourify gas'
    alias ld='colourify ld'
    alias netstat='colourify netstat'
    alias ping='colourify ping'
    alias traceroute='colourify /usr/sbin/traceroute'
    alias traceroute6='colourify traceroute6'
    alias head='colourify head'
    alias tail='colourify tail'
    alias dig='colourify dig'
    alias mount='colourify mount'
    alias ps='colourify ps'
    alias mtr='colourify mtr'
    alias ifconfig='colourify ifconfig'
		if [ $(uname) == "Linux" ]
    then
      alias blkid='colourify blkid'
      alias free='colourify free'
      alias iptables='colourify iptables'
      alias lsblk='colourify lsblk'
      alias lspci='colourify lspci'
      alias ip='colourify ip'
      alias semanage='colourify semanage'
      alias getsebool='colourify getsebool'
		fi
fi


if [ $(uname) == "Darwin" ]
then

  # Get macOS Software Updates, and update installed App Store apps, Ruby gems, Homebrew, npm, and their installed packages
  alias update='sudo -- sh -c "softwareupdate -i -a; /Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild -license accept ; gem update --system; gem update ; gem cleanup" ; if hash mas 2>/dev/null; then mas upgrade; fi; brew update; brew upgrade; brew cleanup; npm install npm -g; npm update -g; '

	# Get local ip address
	alias localip="ipconfig getifaddr $LOCAL_NET_IFACE"

  # Lock the screen (when going AFK)
  alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"

  # Stuff I never really use but cannot delete either because of http://xkcd.com/530/
	alias stfu="osascript -e 'set volume output muted true'"
	alias pumpitup="osascript -e 'set volume output volume 100'"

	# View HTTP traffic
  alias sniff="sudo ngrep -d $LOCAL_NET_IFACE -t '^(GET|POST) ' 'tcp and port 80'"

  # Disable Spotlight
  alias spotoff="sudo mdutil -a -i off"
  # Enable Spotlight
  alias spoton="sudo mdutil -a -i on"

  # PlistBuddy alias, because sometimes `defaults` just doesn’t cut it
  alias plistbuddy="/usr/libexec/PlistBuddy"

	# Airport CLI alias
	alias airport='/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport'

  # make "ip" an alias to myip (on Linux, ip is a system command)
  alias ip=myip

	# random mac address for wifi adapter (sometimes DHCP server stops liking you for a weird reason
	# and this helps)
	alias randmac='sudo ifconfig $LOCAL_NET_IFACE ether `openssl rand -hex 6 | sed "s/\(..\)/\1:/g;s/.$//"`'

  # Show active network interfaces
	GRCAT=`which grcat 2>/dev/null`
	if [ "$TERM" != dumb ] && [ -n "$GRCAT" ] && [ -r /usr/local/share/grc/conf.ifconfig ]; then
			alias ifactive="ifconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active' | grcat /usr/local/share/grc/conf.ifconfig"
	else
			alias ifactive="ifconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active'"
	fi

  # Flush Directory Service cache
  alias flush="dscacheutil -flushcache && killall -HUP mDNSResponder"

	# Clean up LaunchServices to remove duplicates in the “Open With” menu
	alias lscleanup="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"

  # Google Chrome
	alias chrome='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome'
	alias canary='/Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary'

  # JavaScriptCore REPL
  jscbin="/System/Library/Frameworks/JavaScriptCore.framework/Versions/A/Resources/jsc";
  [ -e "${jscbin}" ] && alias jsc="${jscbin}";
  unset jscbin;

  # Trim new lines and copy to clipboard
  alias c="tr -d '\n' | pbcopy"

	# Empty the Trash on all mounted volumes and the main HDD.
	# Also, clear Apple’s System Logs to improve shell startup speed.
	# Finally, clear download history from quarantine. https://mths.be/bum
	alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl; sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'"

  # Show/hide hidden files in Finder
  alias show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
  alias hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"

  # Hide/show all desktop icons (useful when presenting)
  alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
  alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

  # Linux users are used to "locate" command
  alias locate="mdfind"

  # Set a DNS server to locally running dnscrypt
  alias dnson="networksetup -setdnsservers Wi-Fi 127.0.0.1"
  # Set DNS servers to DHCP provided to be able to go through captive portal
  alias dnsoff="networksetup -setdnsservers Wi-Fi empty"

elif [ $(uname) == "Linux" ]
then

	# View HTTP traffic
	alias sniff="sudo ngrep -d $LOCAL_NET_IFACE -t '^(GET|POST) ' 'tcp and port 80'"

	# ifactive on macOS shows only active interfaces, that's the default behavior on Linux
	alias ifactive="ifconfig"

	# Get local ip address
	alias localip="ifconfig $LOCAL_NET_IFACE | grep 'inet addr' | cut -d ':' -f 2 | cut -d ' ' -f 1"

  if which yum >/dev/null 2>&1
	 then
  	alias update='sudo yum update; npm install npm -g; npm update -g; sudo gem update --system; sudo gem update; sudo gem cleanup'
	elif which apt-get >/dev/null 2>&1
   then
  	alias update='sudo apt-get update ; sudo apt-get -u upgrade; npm install npm -g; npm update -g; sudo gem update --system; sudo gem update ; sudo gem cleanup'
  fi

  if which xsel >/dev/null 2>&1
  then
    alias pbcopy='xsel -i -b'
    alias pbpaste='xsel -o -b'
  elif which xclip >/dev/null 2>&1
  then
    alias pbcopy='xclip -selection clipboard -i'
    alias pbpaste='xclip -selection clipboard -o'
  fi

	alias chrome='google-chrome'

fi

# Print each PATH entry on a separate line
alias path='echo -e ${PATH//:/\\n}'

# compatibility with older version of dotfiles, but we switched to ffsend (send.firefox.com)
alias transfer='ffsend upload --copy'
alias json='jq'

# generate password
alias pw='pwgen -cns -r "yzYZ" -B -1 12 1'